### Step 1: Register a new user
POST {{URL}}/auth/register
Content-Type: application/json

{
  "username": "admin",
  "password": "admin123"
}

###

### Step 2: Login to get JWT token
POST {{URL}}/auth/login
Content-Type: application/json

{
  "username": "admin",
  "password": "admin123"
}

> {% client.global.set("jwt_token", response.body.token); %}

###

### Step 3: Create an empty session (no exercises initially)
POST {{URL}}/sessions
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
  "user": {
    "username": "admin",
    "password": "admin123"
  },
  "exercises": []
}

###

### Step 4: Add exercises to the created session (session ID = 1)
PUT {{URL}}/sessions/1
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
  "exercises": [
    {
      "id": 1
    },
    {
      "id": 2
    }
  ]
}

###

### Step 5: Get all sessions
GET {{URL}}/sessions
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

###

### Step 6: Get a specific session by ID
GET {{URL}}/sessions/1
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

###

### Step 7: Get all exercises
GET {{URL}}/exercises
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

###

### Step 8: Get an exercise by ID
GET {{URL}}/exercises/3
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

###

### Step 9: Create a new exercise
POST {{URL}}/exercises
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
  "name": "Test Exercise",
  "description": "TEST",
  "muscleGroup": "ABS"
}

###

### Step 10: Update an exercise
PUT {{URL}}/exercises/3
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
  "name": "Test Exercise",
  "description": "TESTUPDATED",
  "muscleGroup": "ABS"
}

###

### Step 11: Delete an exercise
DELETE {{URL}}/exercises/3
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

###

### Step 12: Delete a session
DELETE {{URL}}/sessions/1
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

